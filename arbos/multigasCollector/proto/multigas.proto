syntax = "proto3";

package multigas.proto;

option go_package = "github.com/ethereum/go-ethereum/arbitrum/multigas/proto";

// Multi-dimensional gas consumption data mirroring multigas.MultiGas struct
message MultiGasData {
  uint64 computation = 1;
  uint64 history_growth = 2;
  uint64 storage_access = 3;
  uint64 storage_growth = 4;
  optional uint64 unknown = 5;
  optional uint64 refund = 6;
}

// Gas data and metadata for a single transaction
message TransactionMultiGasData {
  bytes tx_hash = 1;
  uint32 tx_index = 2;
  MultiGasData multi_gas = 3;
}

// Transactions gas data within a block with block metadata
message BlockMultiGasData {
  uint64 block_number = 1;
  bytes block_hash = 2;
  uint64 block_timestamp = 3;
  repeated TransactionMultiGasData transactions = 4;
}

// Batch of multiple blocks for efficient disk storage
message BlockMultiGasBatch {
  repeated BlockMultiGasData data = 1;
}
