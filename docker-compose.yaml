version: "3.9"
services:
  blockscout:
    depends_on:
      - postgres
      - sequencer
    image: blockscout-testnode
    restart: always
    container_name: 'blockscout'
    links:
      - postgres:database
    command:
      - /bin/sh
      - -c
      - |
        bin/blockscout eval "Elixir.Explorer.ReleaseTasks.create_and_migrate()"
        node init/install.js postgres 5432
        bin/blockscout start
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      -  ./blockscout/nitro.env
    environment:
        ETHEREUM_JSONRPC_VARIANT: 'geth'
        ETHEREUM_JSONRPC_HTTP_URL: http://sequencer:8547/
        INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: "true"
        DATABASE_URL: postgresql://postgres:@postgres:5432/blockscout
        ECTO_USE_SSL: "false"
    ports:
      - "127.0.0.1:4000:4000"

  postgres:
    image: postgres:13.6
    restart: always
    container_name: 'postgres'
    environment:
        POSTGRES_PASSWORD: ''
        POSTGRES_USER: 'postgres'
        POSTGRES_HOST_AUTH_METHOD: 'trust'
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
    ports:
      - "127.0.0.1:7432:5432"

  redis:
    image: redis:6.2.6
    ports:
      - "127.0.0.1:6379:6379"

  geth:
    image: ethereum/client-go:v1.10.23
    ports:
      - "127.0.0.1:8545:8545"
      - "127.0.0.1:8551:8551"
      - "127.0.0.1:8546:8546"
      - "127.0.0.1:30303:30303"
    volumes:
      - "l1data:/datadir"
      - "l1keystore:/keystore"
      - "config:/config"
    command:
      - --keystore=/keystore
      - --http
      - --datadir=/datadir
      - --http.addr=0.0.0.0
      - --authrpc.vhosts=*
      - --authrpc.port=8551
      - --authrpc.addr=0.0.0.0
      - --http.vhosts=*
      - --http.api=engine,personal,eth,net,web3
      - --http.corsdomain=*
      - --ws
      - --ws.addr=0.0.0.0
      - --ws.api=personal,eth,net,web3,debug,txpool
      - --allow-insecure-unlock
      - --unlock=0x3f1Eae7D46d88F08fc2F8ed27FCb2AB183EB2d0E
      - --password=/datadir/passphrase
      - --authrpc.jwtsecret=/config/jwt.hex
      - --nodiscover
      - --syncmode=full
      - --dev
      - --dev.period=1
      - --mine
      - --miner.etherbase=0x3f1Eae7D46d88F08fc2F8ed27FCb2AB183EB2d0E
      - --gcmode=archive

  # Creates a genesis state for the beacon chain using a YAML configuration file and
  # a deterministic set of validators
  # TODO: Make num validators customizable
  create_beacon_chain_genesis:
    image: "gcr.io/prysmaticlabs/prysm/cmd/prysmctl:latest"
    command:
      - testnet
      - generate-genesis
      - --num-validators=64
      - --output-ssz=/consensus/genesis.ssz
      - --chain-config-file=/config/prysm.yaml
    volumes:
      - "consensus:/consensus"
      - "config:/config"

  # Runs a Prysm beacon chain from a specified genesis state created in the previous step
  # and connects to go-ethereum in the same network as the execution client.
  # The account used in go-ethereum is set as the suggested fee recipient for transactions
  # proposed via the validators attached to the beacon node.
  prysm_beacon_chain:
    image: "gcr.io/prysmaticlabs/prysm/beacon-chain:stable"
    command:
      - --datadir=/consensus/beacondata
      - --rpc-port=5000
      - --min-sync-peers=0
      - --interop-genesis-state=/consensus/genesis.ssz
      - --interop-eth1data-votes
      - --bootstrap-node=
      - --chain-config-file=/config/prysm.yaml
      - --rpc-host=0.0.0.0
      - --grpc-gateway-host=0.0.0.0
      - --chain-id=32382
      - --execution-endpoint=http://geth:8551
      - --accept-terms-of-use
      - --jwt-secret=/config/jwt.hex
    depends_on:
      geth:
        condition: service_started
      create_beacon_chain_genesis:
        condition: service_completed_successfully
    ports:
      - "127.0.0.1:5000:5000"
      - "127.0.0.1:3500:3500"
    volumes:
      - "consensus:/consensus"
      - "config:/config"

  # We run a validator client with 64, deterministically-generated keys that match
  # The validator keys present in the beacon chain genesis state generated a few steps above.
  prysm_validator:
    image: "gcr.io/prysmaticlabs/prysm/validator:stable"
    command:
      - --beacon-rpc-provider=prysm_beacon_chain:5000
      - --datadir=/consensus/validatordata
      - --accept-terms-of-use
      - --interop-num-validators=64
      - --interop-start-index=0
      - --chain-config-file=/config/prysm.yaml
    depends_on:
      prysm_beacon_chain:
        condition: service_started
    volumes:
      - "consensus:/consensus"
      - "config:/config"

  sequencer:
    pid: host # allow debugging
    image: nitro-node-dev-testnode
    ports:
      - "127.0.0.1:8547:8547"
      - "127.0.0.1:8548:8548"
      - "127.0.0.1:9642:9642"
    volumes:
      - "seqdata:/home/user/.arbitrum/local/nitro"
      - "config:/config"
    command: --conf.file /config/sequencer_config.json --node.feed.output.enable --node.feed.output.port 9642  --http.api net,web3,eth,txpool,debug --node.seq-coordinator.my-url  ws://sequencer:8548 --graphql.enable --graphql.vhosts * --graphql.corsdomain *
    depends_on:
      - geth
      - redis


  sequencer_b:
    pid: host # allow debugging
    image: nitro-node-dev-testnode
    ports:
      - "127.0.0.1:8647:8547"
      - "127.0.0.1:8648:8548"
    volumes:
      - "seqdata_b:/home/user/.arbitrum/local/nitro"
      - "config:/config"
    command: --conf.file /config/sequencer_config.json --node.seq-coordinator.my-url ws://sequencer_b:8548
    depends_on:
      - geth
      - redis

  sequencer_c:
    pid: host # allow debugging
    image: nitro-node-dev-testnode
    ports:
      - "127.0.0.1:8747:8547"
      - "127.0.0.1:8748:8548"
    volumes:
      - "seqdata_c:/home/user/.arbitrum/local/nitro"
      - "config:/config"
    command: --conf.file /config/sequencer_config.json --node.seq-coordinator.my-url ws://sequencer_c:8548
    depends_on:
      - geth
      - redis

  sequencer_d:
    pid: host # allow debugging
    image: nitro-node-dev-testnode
    ports:
      - "127.0.0.1:8847:8547"
      - "127.0.0.1:8848:8548"
    volumes:
      - "seqdata_d:/home/user/.arbitrum/local/nitro"
      - "config:/config"
    command: --conf.file /config/sequencer_config.json --node.seq-coordinator.my-url ws://sequencer_d:8548
    depends_on:
      - geth
      - redis

  staker-unsafe:
    pid: host # allow debugging
    image: nitro-node-dev-testnode
    ports:
      - "127.0.0.1:8047:8547"
      - "127.0.0.1:8048:8548"
    volumes:
      - "unsafestaker-data:/home/user/.arbitrum/local/nitro"
      - "l1keystore:/home/user/l1keystore"
      - "config:/config"
    command: --conf.file /config/unsafe_staker_config.json
    depends_on:
      - sequencer
      - redis
      - validation_node

  poster:
    pid: host # allow debugging
    image: nitro-node-dev-testnode
    ports:
      - "127.0.0.1:8147:8547"
      - "127.0.0.1:8148:8548"
    volumes:
      - "poster-data:/home/user/.arbitrum/local/nitro"
      - "l1keystore:/home/user/l1keystore"
      - "config:/config"
    command: --conf.file /config/poster_config.json
    depends_on:
      - geth
      - redis

  poster_b:
    pid: host # allow debugging
    image: nitro-node-dev-testnode
    ports:
      - "127.0.0.1:9147:8547"
      - "127.0.0.1:9148:8548"
    volumes:
      - "poster-data-b:/home/user/.arbitrum/local/nitro"
      - "l1keystore:/home/user/l1keystore"
      - "config:/config"
    command: --conf.file /config/poster_config.json
    depends_on:
      - geth
      - redis

  poster_c:
    pid: host # allow debugging
    image: nitro-node-dev-testnode
    ports:
      - "127.0.0.1:9247:8547"
      - "127.0.0.1:9248:8548"
    volumes:
      - "poster-data-c:/home/user/.arbitrum/local/nitro"
      - "l1keystore:/home/user/l1keystore"
      - "config:/config"
    command: --conf.file /config/poster_config.json
    depends_on:
      - geth
      - redis

  validator:
    pid: host # allow debugging
    image: nitro-node-dev-testnode
    ports:
      - "127.0.0.1:8247:8547"
      - "127.0.0.1:8248:8548"
    volumes:
      - "validator-data:/home/user/.arbitrum/local/nitro"
      - "l1keystore:/home/user/l1keystore"
      - "config:/config"
    command: --conf.file /config/validator_config.json --http.port 8547 --http.api net,web3,arb,debug --ws.port 8548
    depends_on:
      - sequencer
      - validation_node

  l3node:
    pid: host # allow debugging
    image: nitro-node-dev-testnode
    ports:
      - "127.0.0.1:3347:3347"
      - "127.0.0.1:3348:3348"
    volumes:
      - "validator-data:/home/user/.arbitrum/local/nitro"
      - "l1keystore:/home/user/l1keystore"
      - "config:/config"
    command: --conf.file /config/l3node_config.json --http.port 3347 --http.api net,web3,arb,debug --ws.port 3348
    depends_on:
      - sequencer
      - validation_node

  validation_node:
    pid: host # allow debugging
    image: nitro-node-dev-testnode
    ports:
      - "127.0.0.1:8949:8549"
    volumes:
      - "config:/config"
    command: --conf.file /config/validation_node_config.json
    entrypoint: /usr/local/bin/nitro-val

  testnode-scripts:
    build: testnode-scripts/
    volumes:
      - "l1keystore:/home/user/l1keystore"
      - "config:/config"
    depends_on:
      - redis

  relay:
    pid: host
    image: nitro-node-dev-testnode
    ports:
      - "127.0.0.1:9652:9652"
    entrypoint: bin/relay
    command: --node.feed.output.port 9652 --node.feed.input.url ws://sequencer:9652

  testnode-tokenbridge:
    depends_on:
      - geth
      - sequencer
    pid: host
    build: testnode-tokenbridge/
    environment:
      - ARB_URL=http://sequencer:8547
      - ETH_URL=http://geth:8545
    volumes:
      - "sdk-data:/workspace"
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  l1data:
  consensus:
  l1keystore:
  seqdata:
  seqdata_b:
  seqdata_c:
  seqdata_d:
  unsafestaker-data:
  validator-data:
  poster-data:
  poster-data-b:
  poster-data-c:
  config:
  postgres-data:
  sdk-data:
