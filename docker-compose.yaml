version: "3.9"
services:
  blockscout:
    depends_on:
      - postgres
      - sequencer
    build:
      context: blockscout
      dockerfile: docker/Dockerfile
    restart: always
    container_name: 'blockscout'
    links:
      - postgres:database
    command: 'mix do ecto.create, ecto.migrate, phx.server'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      -  ./blockscout/nitro.env
    environment:
        ETHEREUM_JSONRPC_VARIANT: 'geth'
        ETHEREUM_JSONRPC_HTTP_URL: http://sequencer:7545/
        INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: true
        DATABASE_URL: postgresql://postgres:@postgres:5432/blockscout?ssl=false
        ECTO_USE_SSL: false
    ports:
      - 4000:4000

  postgres:
    image: postgres:13.6
    restart: always
    container_name: 'postgres'
    environment:
        POSTGRES_PASSWORD: ''
        POSTGRES_USER: 'postgres'
        POSTGRES_HOST_AUTH_METHOD: 'trust'
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
    ports:
      - 7432:5432

  geth:
    image: ethereum/client-go:stable
    ports:
      - "8545:8545"
      - "8546:8546"
      - "30303:30303"
    volumes:
      - "l1data:/root/.ethereum"
      - "l1keystore:/keystore"
    command: --keystore /keystore --http --http.addr 0.0.0.0 --http.vhosts * --http.api personal,eth,net,web3 --ws --ws.addr 0.0.0.0 --ws.api personal,eth,net,web3,debug,txpool --dev --dev.period 1 --password /root/.ethereum/passphrase --gcmode archive

  sequencer:
    pid: host # allow debugging
    build: .
    ports:
      - "7545:7545"
      - "7546:7546"
      - "9642:9642"
    volumes:
      - "seqdata:/data"
      - "l1keystore:/l1keystore"
      - "deploydata:/deploydata"
    command: --persistent.data /data --dev-init --l1.url ws://geth:8546 --l1.wallet.pathname /l1keystore --l1.wallet.password passphrase --l1.deployment /deploydata/deployment.json --http.addr 0.0.0.0 --ws.addr 0.0.0.0 --node.sequencer.enable --node.feed.output.enable --node.feed.output.port 9642 --http.vhosts * --http.api net,web3,eth,txpool,debug --node.archive
    depends_on:
      - geth

  staker-unsafe:
    pid: host # allow debugging
    build: .
    ports:
      - "7545"
      - "7546"
    volumes:
      - "unsafestaker-data:/data"
      - "l1keystore:/l1keystore"
      - "deploydata:/deploydata"
    command: --persistent.data /data --dev-init --l1.url ws://geth:8546 --l1.wallet.pathname /l1keystore --l1.wallet.password passphrase --l1.deployment /deploydata/deployment.json --http.addr 0.0.0.0 --ws.addr 0.0.0.0 --node.validator.enable --node.validator.strategy MakeNodes --node.validator.staker-interval 10s --node.forwarding-target null --node.validator.dangerous.without-block-validator --node.archive
    depends_on:
      - sequencer

  validator:
    pid: host # allow debugging
    build: .
    ports:
      - "7545"
      - "7546"
    volumes:
      - "validator-data:/data"
      - "l1keystore:/l1keystore"
      - "deploydata:/deploydata"
    command: --persistent.data /data --dev-init --l1.url ws://geth:8546 --l1.wallet.pathname /l1keystore --l1.wallet.password passphrase --l1.deployment /deploydata/deployment.json --http.addr 0.0.0.0 --ws.addr 0.0.0.0 --node.validator.enable --node.validator.strategy MakeNodes --node.validator.staker-interval 10s --node.forwarding-target null --node.archive
    depends_on:
      - sequencer

  relay:
    pid: host
    build: .
    ports:
      - "9652:9652"
    entrypoint: target/bin/relay
    command: --node.feed.output.port 9652 --node.feed.input.url ws://sequencer:9642/feed

volumes:
  l1data:
  l1keystore:
  seqdata:
  unsafestaker-data:
  validator-data:
  deploydata:
  postgres-data:

