name: Merge Checks

on:
  # Using pull_request_target for security. If we had used pull_request, then it
  # would be possible for malicious actors to create Pull Requests which would
  # trigger workflows that they could have modified locally to extract secrets.
  # For this reason, the pins below must be updated and merged in a separate PR
  # before the PR that changes the actual submodule pins.
  pull_request_target:
    branches: [ master ]
    types: [synchronize, opened, reopened]

permissions:
  statuses: write

jobs:
  submodule-pin-check:
    name: Check Submodule Pin
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Ensure origin/HEAD is set
        run: git remote set-head origin -a || true

      - name: Check all submodules are ancestors of origin/HEAD or configured branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          declare -Ar exceptions=(
            [contracts]=origin/develop
            [contracts-legacy]=origin/v2-main
            [nitro-testnode]=origin/master
            [bold]=origin/main
            [arbitrator/langs/c]=origin/vm-storage-cache
            [arbitrator/tools/wasmer]=origin/stylus
          )

          divergent=0
          for mod in $(git submodule --quiet foreach 'echo $name'); do
            branch=origin/HEAD
            if [[ -v exceptions[$mod] ]]; then
              branch="${exceptions[$mod]}"
            if [ ! -d "$mod" ]; then
              echo "Submodule $mod not found"
              divergent=1
              continue
            fi

            if ! git -C "$mod" merge-base --is-ancestor HEAD "$branch"; then
              echo "$mod diverges from $branch"
              divergent=1
            fi
          done

          if [[ $divergent -eq 0 ]]; then
            curl -sSL --fail-with-body \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/$GITHUB_REPOSITORY/statuses/${{ github.event.pull_request.head.sha }}" \
              -d '{"context":"Submodule Pin Check","state":"success","description":"All submodule pins are valid."}'
            exit 0
          fi

          # Submodules are divergent — check if we already set a status before
          resp="$(curl -sSL --fail-with-body \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/commits/${{ github.event.pull_request.head.sha }}/statuses")"

          if jq -e '.[] | select(.context == "Submodule Pin Check")' <<< "$resp" > /dev/null; then
            curl -sSL --fail-with-body \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/$GITHUB_REPOSITORY/statuses/${{ github.event.pull_request.head.sha }}" \
              -d '{"context":"Submodule Pin Check","state":"pending","description":"Some submodule pins diverge."}'
          fi

          # Don't fail the workflow — keep green checkmark
          exit 0

