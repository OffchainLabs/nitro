name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

env:
  RUST_BACKTRACE: 1
  RUSTFLAGS: -Dwarnings

jobs:
  rustfmt:
    name: Rust formatting check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --manifest-path arbitrator/Cargo.toml -- --check

  tests:
    name: Run tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Ubuntu dependencies
        run: |
          sudo add-apt-repository -y ppa:ethereum/ethereum
          sudo add-apt-repository -y ppa:longsleep/golang-backports
          sudo apt-get update && sudo apt-get install -y \
            build-essential cmake nodejs ethereum lld-10 golang-go
          sudo ln -s /usr/bin/wasm-ld-10 /usr/local/bin/wasm-ld

      - name: Install rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install rust wasm targets
        run: rustup target add wasm32-wasi wasm32-unknown-unknown

      - name: Install latest wabt
        run: |
          cd "$(mktemp -d)"
          git clone --recursive -b 1.0.24 https://github.com/WebAssembly/wabt .
          mkdir build
          cd build
          cmake ..
          make -j
          sudo make install

      - name: Run rust tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --manifest-path arbitrator/Cargo.toml

      - name: Make proofs from test cases
        run: cd arbitrator && make -j

      - name: Start geth server
        run: |
          geth --dev --http --http.port 8545 &
          sleep 2

      - name: Run proof validation tests
        run: |
          npm install --global yarn
          cd arbitrator/rollup
          yarn install
          yarn hardhat test --network localhost
